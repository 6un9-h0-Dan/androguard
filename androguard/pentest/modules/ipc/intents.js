// Ripped from https://github.com/Ch0pin/medusa/

console.log('LOADING IPC/INTENTS.JS');

var uri = Java.use('android.net.Uri'); 
var intent1 = Java.use('android.content.Intent');
var bundle1 = Java.use('android.os.Bundle');

uri.getQueryParameter.implementation = function(key){
    var ret = this.getQueryParameter(key);
    colorLog('[+] Query parameters fetched, key:' + key + ', value:'+ ret, {c: Color.Red});
    return ret;
}

uri.getQueryParameters.implementation = function(key){
    var ret = this.getQueryParameters(key);
    colorLog('[+] Query parameters fetched, key:' + key + ', value:'+ ret, {c: Color.Red});
    return ret;
}


bundle1.getByte.overloads[0].implementation = function(key){
    var ret = this.getByte(key);
    console.log('Byte Bundle key:'+key + ', value:'+ret);
    return ret;
}
bundle1.getByte.overloads[1].implementation = function(key,def){
    var ret = this.getByte(key,def);
    console.log('Byte Bundle key:'+key + ', value:'+ret);
    return ret;
}

bundle1.getChar.overloads[0].implementation = function(key){
    var ret = this.getChar(key);
    console.log('getChar Bundle key:'+key + ', value:'+ret);
    return ret;
}
bundle1.getChar.overloads[1].implementation = function(key,def){
    var ret = this.getChar(key,def);
    console.log('getChar Bundle key:'+key + ', value:'+ret);
    return ret;
}

bundle1.getCharSequence.overloads[0].implementation = function(key){
    var ret = this.getCharSequence(key);
    console.log('getCharSequence Bundle key:'+key + ', value:'+ret);
    return ret;
}
bundle1.getCharSequence.overloads[1].implementation = function(key,def){
    var ret = this.getCharSequence(key,def);
    console.log('getCharSequence Bundle key:'+key + ', value:'+ret);
    return ret;
}

bundle1.getFloat.overloads[0].implementation = function(key){
    var ret = this.getFloat(key);
    console.log('getFloat Bundle key:'+key + ', value:'+ret);
    return ret;
}
bundle1.getFloat.overloads[1].implementation = function(key,def){
    var ret = this.getFloat(key,def);
    console.log('getFloat Bundle key:'+key + ', value:'+ret);
    return ret;
}

bundle1.getShort.overloads[0].implementation = function(key){
    var ret = this.getShort(key);
    console.log('getShort Bundle key:'+key + ', value:'+ret);
    return ret;
}
bundle1.getShort.overloads[1].implementation = function(key,def){
    var ret = this.getShort(key,def);
    console.log('getShort Bundle key:'+key + ', value:'+ret);
    return ret;
}
intent1.getSerializableExtra.implementation = function(name){
    
    colorLog('[+] INCOMING INTENT: '+this,{c:Color.Green});
    console.log('[+]\tSerializable Extra, name: '+ name);
    return this.getSerializableExtra(name);
}

intent1.getParcelableExtra.implementation = function(name){
    colorLog('[+] INCOMING INTENT: '+this,{c:Color.Green});
    console.log('[+]\tParcelable Extra, name: '+ name);
    return this.getParcelableExtra(name);
}

intent1.getBooleanExtra.implementation = function(name,value){
    colorLog('[+] INCOMING INTENT: '+this,{c:Color.Green});
    console.log('[+]\tBoolean Extra, name: '+ name + ', value:'+value);
    return this.getBooleanExtra(name,value);
}

intent1.getBundleExtra.implementation = function(bundlename){
    colorLog('[+] INCOMING INTENT: '+this,{c:Color.Green});

    console.log('[+]\tBundle Extra, name: '+ bundlename);
    return this.getBundleExtra(bundlename);
}

intent1.getByteArrayExtra.implementation = function(name){
    colorLog('[+] INCOMING INTENT: '+this,{c:Color.Green});

    console.log('[+]\tByte Array Extra, name: '+ name);
    return this.getByteArrayExtra(name);
}

intent1.getByteExtra.implementation = function(name,value){
    colorLog('[+] INCOMING INTENT: '+this,{c:Color.Green});

    console.log('[+]\tByte Extra, name: '+ name + ', value:'+value);
    return this.getByteExtra(name,value);
}

intent1.getCharArrayExtra.implementation = function(name){
    colorLog('[+] INCOMING INTENT: '+this,{c:Color.Green});

    console.log('[+]\tChar Array Extra, name: '+ name);
    return this.getCharArrayExtra(name);
}

intent1.getCharExtra.implementation = function(name,value){
    colorLog('[+] INCOMING INTENT: '+this,{c:Color.Green});

    var ret =  this.getCharExtra(name,value);
    console.log('[+]\tChar Extra, name: '+ name, ', '+ret);
    return ret;
}

intent1.getData.implementation = function(){
    colorLog('[+] INCOMING INTENT: '+this,{c:Color.Green});

    var ret = this.getData();
    console.log('[+]\t Data URI:'+ret);
    return ret;

}

intent1.getDataString.implementation = function(){
    colorLog('[+] INCOMING INTENT: '+this,{c:Color.Green});

    var ret = this.getDataString();
    console.log('[+]\t data URI:'+ret);
    return ret;

}

intent1.getDoubleArrayExtra.implementation = function(name){
    colorLog('[+] INCOMING INTENT: '+this,{c:Color.Green});

    console.log('[+]\t Double Array Extra, name: '+ name);
    return this.getDoubleArrayExtra(name);
}
intent1.getDoubleExtra.implementation = function(name,value){
    colorLog('[+] INCOMING INTENT: '+this,{c:Color.Green});

    var ret =  this.getDoubleExtra(name,value);
    console.log('[+]\t Double Extra, name: '+ name, ', '+ret);
    return ret;
}

intent1.getStringExtra.implementation = function(name){
    colorLog('[+] INCOMING INTENT: '+this,{c:Color.Green});

    var ret =  this.getStringExtra(name);
    console.log('[+]\t String Extra, name: '+ name, ', '+ret);
    return ret;
}

intent1.getPackage.implementation = function(){
    colorLog('[+] INCOMING INTENT: '+this,{c:Color.Green});

    var ret =  this.getPackage();
    console.log('[+]\t intent package origin:'+ret);
    return ret;
}